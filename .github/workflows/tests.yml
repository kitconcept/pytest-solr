name: Tests
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.7"]
        solr-version: ["9.1.1", "8.11.2", "7.7.3", "7.4.0"]

    steps:
      # git checkout
      - uses: actions/checkout@v2

      # python setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      # python cache
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # python install
      - run: pip install virtualenv
      - run: pip install wheel
      - name: pip install
        run: pip install -r requirements.txt
      - run: python setup.py develop

      # solr cache
      - uses: actions/cache@v1
        with:
          path: ~/downloads
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Makefile') }}
          restore-keys: |
            ${{ runner.os }}-solr-

      # install Solr
      - run: sed -ie "s#SOLR_VERSION := 8.11.2#SOLR_VERSION := ${{ matrix.solr-version }}#" Makefile
      - run: sed -ie "s#8.11.2#${{ matrix.solr-version }}#" src/pytest_solr/factories.py
      - run: make download-solr

      # test
      - name: test
        run: py.test -v tests/
